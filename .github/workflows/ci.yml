name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.14"
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        run: uv python install

      - name: Install Dependencies
        run: uv sync --all-extras --dev

      - name: Run Tests
        run: uv run pytest

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.14"

      - name: Set up Python
        run: uv python install

      - name: Install Build Tools
        run: uv sync --all-extras --dev

      - name: Build Package
        run: uv build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.14"

      - name: Set up Python
        run: uv python install

      - name: Publish to PyPI
        run: uv publish --token ${{ secrets.PYPI_API_TOKEN }}
